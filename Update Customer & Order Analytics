--In this SQL, I'm querying a database with multiple tables in it to quantify statistics about order data. 


-- Q1: How many orders were placed in January?

  SELECT COUNT(orderID) FROM BIT_DB.JanSales
WHERE length(orderID) = 6 AND orderID IS NOT NULL;

-- Q2: How many of those orders were for an iPhone?

  SELECT COUNT(orderID) FROM BIT_DB.JanSales
WHERE length(orderID) = 6 AND orderID IS NOT NULL AND Product = 'iPhone';

-- Q3: Select the customer account numbers for all the orders that were placed in February.

  SELECT distinct customers.acctnum
FROM BIT_DB.customers
INNER JOIN FebSales
ON customers.order_id = Febsales.orderID
WHERE length(orderid) = 6
AND orderid != 'Order ID';

-- Q4: Which product was the cheapest one sold in January, and what was the price?

  SELECT DISTINCT Product, MIN(price) AS Price
FROM BIT_DB.FebSales
GROUP BY Product, Price
ORDER BY Price ASC
LIMIT 1

-- Q5: What is the total revenue for each product sold in January?

  SELECT ROUND(SUM(price)* Quantity) as Revenue, Product
FROM BIT_DB.JanSales
GROUP BY JanSales.Product;

-- Q6: Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

  SELECT Distinct Product, SUM(Quantity), SUM(Quantity * price) AS Revenue
FROM FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

-- Q7: How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

  SELECT COUNT (customers.acctnum) as Customers,
ROUND(AVG(quantity * price)) AS Average_Spent
FROM customers
LEFT JOIN FebSales
ON customers.order_id = FebSales.orderID
WHERE FebSales.Quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';

-- Q8 List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT FebSales.Product, SUM(FebSales.Quantity) as Total_Sold
FROM FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;

-- Q9: Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 
SELECT DISTINCT JanSales.location, COUNT(JanSales.Quantity) AS Orders
FROM JanSales
WHERE location LIKE '%Ny%'
AND orderID != 'Order ID'
AND length(orderid) = 6
GROUP BY location
HAVING Orders >= 3;

-- Q10: How many of each type of headphone were sold in February?
SELECT FebSales.Product, SUM(FebSales.Quantity) AS Total_Sold
FROM FebSales
WHERE Product LIKE '%Headphones%'
GROUP BY FebSales.Product;

-- Q11: What was the average amount spent per account in February? 
SELECT DISTINCT customers.acctnum, AVG(FebSales.Quantity * FebSales.price)
FROM FebSales
JOIN customers
ON FebSales.orderID = customers.order_id
WHERE length(customers.order_id) = 6
AND customers.order_id != 'Order ID'
GROUP BY customers.acctnum;

-- Q12: What was the average quantity of products purchased per account in February?
SELECT DISTINCT customers.acctnum, AVG(FebSales.Quantity)
FROM FebSales
JOIN customers
ON FebSales.orderID = customers.order_id
WHERE length(customers.order_id) = 6
AND customers.order_id != 'Order ID'
GROUP BY customers.acctnum;


-- Q13: Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT JanSales.Product, SUM(JanSales.price * JanSales.Quantity)
FROM JanSales
GROUP BY JanSales.Product
ORDER BY SUM(JanSales.price * JanSales.Quantity) DESC
LIMIT 1;
